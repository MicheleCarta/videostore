server.port: 3000

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,loggers
  endpoint:
    health:
      show-details: always
    metrics:
      enabled: true
  metrics:
    enable:
      all: false
      spring.component.calls: true
      http: true
      rabbitmq: true
    distribution:
      percentiles-histogram:
        all: false
      percentiles:
        all:
    export:
      datadog:
        enabled: ${DATADOG_ENABLED:false}
        host-tag: host
        api-key: ${DATADOG_API_KEY:KEY123}

spring:
  application:
    name: video-store-service
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  profiles:
    active: ${PROFILE:test}
  gson:
    pretty-printing: true
  jackson:
    serialization:
      INDENT_OUTPUT: true
      write-dates-as-timestamps: false

  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:3259}/${DATABASE_NAME:video_store}
    username: ${DATABASE_USER:vs}
    password: ${DATABASE_PASSWORD:vs}

  jpa:
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
      dialect: org.hibernate.dialect.PostgreSQLDialect

  rabbitmq:
    host: ${MESSAGING_HOST:rabbitmq}
    port: ${MESSAGING_PORT:5672}
    virtual-host: ${MESSAGING_VHOST:/}
    username: ${MESSAGING_USER:guest}
    password: ${MESSAGING_PASSWORD:guest}
  sql:
    init:
      platform: postgres


metrics:
  hostname: ${HOSTNAME:localhost}
  environment-id: ${METRICS_ENV:local}
  allowed-class-tags:
  empty-class-tag-allowed: true

logging:
  traceable:
    http.mdc-cleaner-disabled: true
  level:
    "org.springframework.amqp.rabbit.listener.ConditionalRejectingErrorHandler": warn

